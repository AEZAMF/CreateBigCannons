plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

repositories {
    // mavens for Forge-exclusives
    maven { url = "https://maven.theillusivec4.top/" } // Curios
    maven { // Create Forge and Registrate Forge
        url = "https://maven.tterrag.com/"
        content {
            includeGroup("com.tterrag.registrate")
            includeGroup("com.simibubi.create")
        }
    }
}

dependencies {
    forge("net.minecraftforge:forge:${minecraft_version}-${forge_version}")
    common(project(path: ":common", configuration: "namedElements")) {
        transitive = false
        exclude(group: "com.simibubi.create") // exclude Create Fabric used in common
    }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) {
        transitive = false
        exclude(group: "com.simibubi.create") // exclude Create Fabric used in common
    }

    // Create and its dependencies
    modImplementation("com.simibubi.create:create-${minecraft_version}:${create_forge_version}")
    modImplementation("com.tterrag.registrate:Registrate:${registrate_forge_version}")
    modImplementation("com.jozufozu.flywheel:flywheel-forge-${flywheel_forge_minecraft_version}:${flywheel_forge_version}")

    modImplementation("top.theillusivec4.curios:curios-forge:${curios_minecraft_version}-${curios_version}")

    // Development QOL
    modLocalRuntime("me.shedaniel:RoughlyEnoughItems-forge:${rei_version}") { transitive = false }
    modLocalRuntime("me.shedaniel.cloth:cloth-config-forge:${cloth_config_version}") { transitive = false } // for REI
    modLocalRuntime("dev.architectury:architectury-forge:${architectury_version}") // for REI
    modLocalRuntime("me.shedaniel.cloth:basic-math:0.6.0") { transitive = false } // for REI
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
